{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport ethers from 'ethers';\n\n\tconst abi = '[{\"name\": \"Transfer\", \"inputs\": [{\"type\": \"address\", \"name\": \"_from\", \"indexed\": true}, {\"type\": \"address\", \"name\": \"_to\", \"indexed\": true}, {\"type\": \"uint256\", \"name\": \"_value\", \"indexed\": false}], \"anonymous\": false, \"type\": \"event\"}, {\"name\": \"Approval\", \"inputs\": [{\"type\": \"address\", \"name\": \"_owner\", \"indexed\": true}, {\"type\": \"address\", \"name\": \"_spender\", \"indexed\": true}, {\"type\": \"uint256\", \"name\": \"_value\", \"indexed\": false}], \"anonymous\": false, \"type\": \"event\"}, {\"name\": \"WhitelistAdd\", \"inputs\": [{\"type\": \"address\", \"name\": \"_who\", \"indexed\": true}], \"anonymous\": false, \"type\": \"event\"}, {\"name\": \"WhitelistRemove\", \"inputs\": [{\"type\": \"address\", \"name\": \"_who\", \"indexed\": true}], \"anonymous\": false, \"type\": \"event\"}, {\"name\": \"getCashPerShare\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 20215}, {\"name\": \"withdrawableCashOf\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"who\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 61605}, {\"outputs\": [], \"inputs\": [{\"type\": \"string\", \"name\": \"_name\"}, {\"type\": \"string\", \"name\": \"_symbol\"}, {\"type\": \"uint256\", \"name\": \"_decimals\"}, {\"type\": \"address\", \"name\": \"_cash_token\"}], \"constant\": false, \"payable\": false, \"type\": \"constructor\"}, {\"name\": \"totalSupply\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 1391}, {\"name\": \"setAdmin\", \"outputs\": [], \"inputs\": [{\"type\": \"address\", \"name\": \"who\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 36517}, {\"name\": \"addToPool\", \"outputs\": [], \"inputs\": [{\"type\": \"address\", \"name\": \"who\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 760564}, {\"name\": \"removeFromPool\", \"outputs\": [], \"inputs\": [{\"type\": \"address\", \"name\": \"who\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 95711}, {\"name\": \"transfer\", \"outputs\": [{\"type\": \"bool\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"_to\"}, {\"type\": \"uint256\", \"name\": \"_value\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 797734}, {\"name\": \"mint\", \"outputs\": [], \"inputs\": [{\"type\": \"address\", \"name\": \"_to\"}, {\"type\": \"uint256\", \"name\": \"_value\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 80361}, {\"name\": \"withdrawDonations\", \"outputs\": [], \"inputs\": [{\"type\": \"uint256\", \"name\": \"amount\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 138472}, {\"name\": \"transferFrom\", \"outputs\": [{\"type\": \"bool\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"_from\"}, {\"type\": \"address\", \"name\": \"_to\"}, {\"type\": \"uint256\", \"name\": \"_value\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 879}, {\"name\": \"approve\", \"outputs\": [{\"type\": \"bool\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"_spender\"}, {\"type\": \"uint256\", \"name\": \"_value\"}], \"constant\": false, \"payable\": false, \"type\": \"function\", \"gas\": 870}, {\"name\": \"allowance\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"_owner\"}, {\"type\": \"address\", \"name\": \"_spender\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 939}, {\"name\": \"name\", \"outputs\": [{\"type\": \"string\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 8093}, {\"name\": \"symbol\", \"outputs\": [{\"type\": \"string\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 7146}, {\"name\": \"decimals\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 1751}, {\"name\": \"admin\", \"outputs\": [{\"type\": \"address\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 1781}, {\"name\": \"cashToken\", \"outputs\": [{\"type\": \"address\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 1811}, {\"name\": \"balanceOf\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 1995}, {\"name\": \"whitelist\", \"outputs\": [{\"type\": \"bool\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 2025}, {\"name\": \"shareBalanceOf\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [{\"type\": \"address\", \"name\": \"arg0\"}], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 2055}, {\"name\": \"total_share_supply\", \"outputs\": [{\"type\": \"uint256\", \"name\": \"\"}], \"inputs\": [], \"constant\": true, \"payable\": false, \"type\": \"function\", \"gas\": 1931}]';\n\n\tconst provider = new ethers.providers.Web3Provider(web3.currentProvider);\n\tconst signer = provider.getSigner();\n\n\tconst addressData = [];\n\n\tlet myCash = 'Loading...';\n\tlet myDrops = 'Loading...';\n\n\tlet contract;\n\tlet cashContract;\n\n\tconst approve = async () => {\n\t\tconst myCashContract = cashContract.connect(signer);\n\n\t\tawait myCashContract.approve(contract.address, ethers.constants.MaxUint256, { gasLimit: 200000 });\n\t}\n\n\tconst donate = async () => {\n\t\tconst amountToDonate = prompt('How much cash to donate?');\n\n\t\tconst myDropsContract = contract.connect(signer);\n\t\tawait myDropsContract.mint(await signer.getAddress(), ethers.utils.parseEther(amountToDonate), { gasLimit: 200000 });\n\t}\n\n\tconst award = async (address) => {\n\t\tconst amountToAward = prompt('How many drops to award?');\n\n\t\tconst myDropsContract = contract.connect(signer);\n\t\tawait myDropsContract.transfer(address, ethers.utils.parseEther(amountToAward), { gasLimit: 797734 });\n\t}\n\n\tconst withdraw = async (address) => {\n\t\tconst amountToAward = prompt('How much cash to withdraw?');\n\n\t\tconst myDropsContract = contract.connect(signer);\n\t\tawait myDropsContract.withdrawDonations(address, { gasLimit: 200000 });\n\t}\n\n\t(async () => {\n\t\tawait window.ethereum.enable()\n\n\t\tconst response = await fetch('/constants.json');\n\t\tconst constants = await response.json();\n\n\t\tcontract = new ethers.Contract(constants.dropsTokenAddress, abi, provider);\n\t\tcashContract = new ethers.Contract(constants.cashTokenAddress, abi, provider);\n\n\t\tconst dropsDecimals = (await contract.decimals()).toNumber();\n\t\tconst cashDecimals = (await cashContract.decimals()).toNumber();\n\n\t\tconst totalShareSupply = await contract.total_share_supply();\n\n\t\tfor (let address in constants.whitelist) {\n\t\t\tconst addressDatum = {\n\t\t\t\t'address': address,\n\t\t\t\t'name': constants.whitelist[address]\n\t\t\t};\n\n\t\t\taddressDatum.drops = ethers.utils.formatUnits(await contract.balanceOf(address), dropsDecimals);\n\n\t\t\tconst shares = await contract.shareBalanceOf(address);\n\n\t\t\taddressDatum.shares = ethers.utils.formatUnits(shares, dropsDecimals / 2);\n\t\t\taddressDatum.stake = shares.toNumber() / totalShareSupply.toNumber();\n\n\t\t\tconst cash = await contract.withdrawableCashOf(address);\n\n\t\t\taddressDatum.cash = ethers.utils.formatUnits(cash, cashDecimals);\n\n\t\t\taddressData.push(addressDatum);\n\n\t\t\tconst myAddress = await signer.getAddress();\n\n\t\t\tmyCash = await ethers.utils.formatUnits(\n\t\t\t\tawait cashContract.balanceOf(myAddress),\n\t\t\t\tcashDecimals\n\t\t\t);\n\n\t\t\tmyDrops = await ethers.utils.formatUnits(\n\t\t\t\tawait contract.balanceOf(myAddress),\n\t\t\t\tdropsDecimals\n\t\t\t);\n\t\t}\n\n\t\taddressData = addressData;\n\t})();\n</script>\n\n<style>\n\t#container {\n    width: 800px;\n    margin: auto;\n    font-family: monospace;\n    padding-top: 50px;\n\t\tfont-size: 18px;\n\t}\n\n\th1 {\n\t\ttext-align: center;\n\t\tmargin-bottom: 50px;\n\t}\n\n\t#creators {\n\t\tmargin: 50px 0;\n\t}\n\n\t#creators > div {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1.25fr 1fr auto;\n\t\talign-items: center;\n\t\theight: 100px;\n\t}\n\n\t.info {\n\t\tcolor: #999;\n\t}\n\n\tbutton {\n\t\tbackground: #26e;\n\t\tpadding: 6px;\n\t\tfont-family: monospace;\n\t\tcolor: white;\n\t\tborder: none;\n\t\tborder-radius: 4px;\n\t\tfont-size: 14px;\n\t\twidth: 200px;\n\t\tmargin-bottom: 5px;\n\t}\n\n\tbutton:hover {\n\t\tbackground: #38f;\n\t}\n\n\tbutton:active {\n\t\tbackground: #12d;\n\t}\n\n\t#mine {\n\t\ttext-align: center;\n\t}\n\n\t#mine button {\n\t\tmargin: 10px 0 -5px 0;\n\t\tbackground: #691;\n\t}\n\n\t#mine button:hover {\n\t\tbackground: #8a2;\n\t}\n\n\t#mine button:active {\n\t\tbackground: #570;\n\t}\n</style>\n\n<div id=\"container\">\n  <h1>Mathematicians Guild Umbrella</h1>\n\t<div id=\"mine\">\n\t\t<div>My Cash: {myCash}</div>\n\t\t<div>My Drops: {myDrops}</div>\n\t\t<div><button on:click={approve}>Approve cash</button></div>\n\t\t<button on:click={donate}>Donate to pool</button>\n\t</div>\n\t<div id=\"creators\">\n\t\t{#each addressData as address}\n\t\t\t<div>\n\t\t\t\t<div>{address.name}</div>\n\t\t\t\t<div class=\"info\">\n\t\t\t\t\t<div>Drops: {parseFloat(address.drops).toFixed(2)}</div>\n\t\t\t\t\t<div>Shares: {parseFloat(address.shares).toFixed(2)}</div>\n\t\t\t\t\t<div>Stake: {(address.stake * 100).toFixed(2)}%</div>\n\t\t\t\t\t<div>Cash: {parseFloat(address.cash).toFixed(2)}</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div><button on:click={() => {award(address.address)}}>Award Drops</button></div>\n\t\t\t\t\t<div><button on:click={() => {withdraw(address.address)}}>Withdraw cash</button></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA8FC,UAAU,4BAAC,CAAC,AACT,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,SAAS,CACtB,WAAW,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,EAAE,4BAAC,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,SAAS,4BAAC,CAAC,AACV,MAAM,CAAE,IAAI,CAAC,CAAC,AACf,CAAC,AAED,uBAAS,CAAG,GAAG,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CACtC,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,KAAK,AACd,CAAC,AAED,KAAK,4BAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,MAAM,4BAAC,CAAC,AACP,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CACZ,WAAW,CAAE,SAAS,CACtB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,GAAG,AACnB,CAAC,AAED,kCAAM,MAAM,AAAC,CAAC,AACb,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,kCAAM,OAAO,AAAC,CAAC,AACd,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,KAAK,4BAAC,CAAC,AACN,UAAU,CAAE,MAAM,AACnB,CAAC,AAED,mBAAK,CAAC,MAAM,cAAC,CAAC,AACb,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CACrB,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,mBAAK,CAAC,oBAAM,MAAM,AAAC,CAAC,AACnB,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,mBAAK,CAAC,oBAAM,OAAO,AAAC,CAAC,AACpB,UAAU,CAAE,IAAI,AACjB,CAAC"
}